#!/usr/bin/python

# The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
# Find the sum of all the primes below two million.

from math import sqrt
from primes import is_prime

# this uses wheel factorization to reduce the number of candidates for the primality test

if __name__ == "__main__":
	max = 2000000
	total = 2 + 3 + 5

	#primeProduct = 2*3*5
	#wheel = [ 29, 23, 19, 17, 13, 11, 7, 1 ]

	primeProduct = 2*3*5*7 
	wheel = [ 1, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 121, 127, 131, 137, 139, 143, 149, 151, 157, 163, 167, 169, 173, 179, 181, 187, 191, 193, 197, 199, 209 ]

	multiplier = 1

	while True:
		for entry in wheel:
			candidate = primeProduct * multiplier - entry

			if(candidate >= max):
				print total - 1
				exit(0)

			if is_prime(candidate):
				total += candidate

		multiplier += 1
